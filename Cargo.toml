[package]
name = "oberon"
authors = ["Michael Lodder <redmike7@gmail.com>"]
description = """
Oberon allows endpoints to issue multi-factor capable tokens to consumers
who can prove their validity with disclosing the tokens themselves without requiring email, SMS, or authenticator apps. Endpoints
only need to store a single public key and not any tokens. An attacker that breaks
into the server doesn't have any password/token files to steal and only would see
a public key. The proof of token validity is only 96 bytes while the token itself
is only 48 bytes. The issuing party and verifying servers can be separate entities.
"""
edition = "2018"
keywords = ["zero-knowledge", "cryptography", "authentication"]
categories = ["no-std", "wasm", "network-programming", "cryptography", "authentication"]
homepage = "https://github.com/mikelodder7/oberon"
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/mikelodder7/oberon"
version = "1.0.0-pre1"

[lib]
crate-type = ["rlib", "cdylib"]

[profile.release]
lto = true

[features]
default = []
alloc = ["bls12_381_plus/alloc", "digest/alloc"]
std = ["digest/std", "sha3/std"]
wasm = ["rand", "wasm-bindgen"]

[dependencies]
bls12_381_plus = "0.4"
digest = { version = "0.9", default-features = false }
ff = "0.9"
group = "0.9"
rand_core = "0.6"
rand = { version = "0.8", default-feature = false, optional = true }
serde = { version = "1.0", features = ["derive"] }
sha3 = { version = "0.9", default-features = false }
subtle = "2.4"
wasm-bindgen = { version = "0.2", default-features = false, features = ["serde-serialize"], optional = true }
zeroize = { version = "1.3", features = ["zeroize_derive"] }

[dev-dependencies]
rand_xorshift = "0.3"